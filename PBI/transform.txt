let
    Source = AzureStorage.DataLake(DataLakeUri),
    AddColumn = Table.AddColumn(Source, "SourcePath", each [Folder Path] & [Name]),
    #"Split Column by Delimiter" = Table.SplitColumn(AddColumn, "Folder Path", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Folder Path.1", "Folder Path.2", "Folder Path.3", "Folder Path.4", "Folder Path.5", "Folder Path.6", "Folder Path.7", "Folder Path.8", "Folder Path.9"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Split Column by Delimiter",{"SourcePath", "Name", "Extension", "Folder Path.5", "Folder Path.6", "Folder Path.7", "Folder Path.8"}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Removed Other Columns1", "Folder Path.8", Splitter.SplitTextByDelimiter("-", QuoteStyle.Csv), {"Folder Path.8.1", "Folder Path.8.2"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"Folder Path.8.1", type date}, {"Folder Path.8.2", type date}}),
    #"Added Suffix" = Table.TransformColumns(#"Changed Type4", {{"Folder Path.8.1", each Text.From(_, "en-US") & " 12:00:00 AM", type text}}),
    #"Added Suffix1" = Table.TransformColumns(#"Added Suffix", {{"Folder Path.8.2", each Text.From(_, "en-US") & " 11:59:59 PM", type text}}),
    #"Changed Type5" = Table.TransformColumnTypes(#"Added Suffix1",{{"Folder Path.8.2", type datetime}, {"Folder Path.8.1", type datetime}}),
    #"Filtered Rows1" = Table.SelectRows(#"Changed Type5", each [Folder Path.5] = "ccmdata" and [Folder Path.6] = BillingProfileIdOrEnrollmentNumber and [Folder Path.7] = "amortizedcost"  and [Folder Path.8.1] >= Date.StartOfMonth(RangeStart) and [Folder Path.8.2] < Date.EndOfMonth(RangeEnd)),
    GetContents = Table.AddColumn(#"Filtered Rows1", "Content", each AzureStorage.DataLakeContents([SourcePath])),
    Unpack = Table.AddColumn(GetContents, "Custom", each fnUnpackData([Content])),
    #"Removed Other Columns" = Table.SelectColumns(Unpack,{"Custom"}),
    #"Expand CSV" = Table.ExpandTableColumn(#"Removed Other Columns", "Custom", {"BillingAccountId", "BillingAccountName", "BillingPeriodStartDate", "BillingPeriodEndDate", "BillingProfileId", "BillingProfileName", "AccountOwnerId", "AccountName", "SubscriptionId", "SubscriptionName", "Date", "Product", "PartNumber", "MeterId", "ServiceFamily", "MeterCategory", "MeterSubCategory", "MeterRegion", "MeterName", "Quantity", "EffectivePrice", "Cost", "UnitPrice", "BillingCurrency", "ResourceLocation", "AvailabilityZone", "ConsumedService", "ResourceId", "ResourceName", "ServiceInfo1", "ServiceInfo2", "AdditionalInfo", "Tags", "InvoiceSectionId", "InvoiceSection", "CostCenter", "UnitOfMeasure", "ResourceGroup", "ReservationId", "ReservationName", "ProductOrderId", "ProductOrderName", "OfferId", "IsAzureCreditEligible", "Term", "PublisherName", "PlanName", "ChargeType", "Frequency", "PublisherType"}, {"BillingAccountId", "BillingAccountName", "BillingPeriodStartDate", "BillingPeriodEndDate", "BillingProfileId", "BillingProfileName", "AccountOwnerId", "AccountName", "SubscriptionId", "SubscriptionName", "Date", "Product", "PartNumber", "MeterId", "ServiceFamily", "MeterCategory", "MeterSubCategory", "MeterRegion", "MeterName", "Quantity", "EffectivePrice", "Cost", "UnitPrice", "BillingCurrency", "ResourceLocation", "AvailabilityZone", "ConsumedService", "ResourceId", "ResourceName", "ServiceInfo1", "ServiceInfo2", "AdditionalInfo", "Tags", "InvoiceSectionId", "InvoiceSection", "CostCenter", "UnitOfMeasure", "ResourceGroup", "ReservationId", "ReservationName", "ProductOrderId", "ProductOrderName", "OfferId", "IsAzureCreditEligible", "Term", "PublisherName", "PlanName", "ChargeType", "Frequency", "PublisherType"}),
    #"Changed Type3" = Table.TransformColumnTypes(#"Expand CSV",{{"Date", type date}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type3", each [MeterRegion] <> "Azure Stack" and [Date] >= Date.From(RangeStart) and [Date] < Date.From(RangeEnd)),
    #"Added Conditional Column" = Table.AddColumn(#"Filtered Rows", "CustomAddInfo", each if [AdditionalInfo] <> null and [AdditionalInfo] <> "" then [AdditionalInfo] else "{}"),
    #"Parsed JSON" = Table.TransformColumns(#"Added Conditional Column",{{"CustomAddInfo", Json.Document}}),
    #"Replaced Errors" = Table.ReplaceErrorValues(#"Parsed JSON", {{"CustomAddInfo", null}}),
    #"Expanded CustomAddInfo" = Table.ExpandRecordColumn(#"Replaced Errors", "CustomAddInfo", {"UsageType", "ImageType", "ServiceType", "VMName", "VMProperties", "VCPUs", "CPUs"}, {"UsageType", "ImageType", "ServiceType", "VMName", "VMProperties", "VCPUs", "CPUs"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded CustomAddInfo",{{"VCPUs", Int64.Type}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"ServiceType", "SKU"}}),
    #"Added Conditional Column1" = Table.AddColumn(#"Renamed Columns", "Azure Hybrid Benefit", each if Text.Contains([MeterSubCategory], "Windows") then "Not enabled" else if Text.Contains([ServiceInfo2], "Windows Server BYOL") then "Enabled" else "Not supported"),
    #"Added Conditional Column2" = Table.AddColumn(#"Added Conditional Column1", "AHB vCPUs", each if [VCPUs] = null then 0 else if [VCPUs] <= 8 then 8 else if [VCPUs] <= 16 then 16 else if [VCPUs] = 20 then 24 else if [VCPUs] > 20 then [VCPUs] else 0),
    #"Changed Type2" = Table.TransformColumnTypes(#"Added Conditional Column2",{{"AHB vCPUs", Int64.Type}}),
    #"Added Conditional Column3" = Table.AddColumn(#"Changed Type2", "Instance Name", each if [VMName] = null then [ResourceName] else if [VMName] <> null then [VMName] else null),
    #"Added Conditional Column4" = Table.AddColumn(#"Added Conditional Column3", "IsRIUsage", each if [ReservationId] = "" then "On Demand Usage" else "RI Usage"),
    #"Added Custom" = Table.AddColumn(#"Added Conditional Column4", "TagsAsJson", each "{" & [Tags] & "}"),
    #"Parsed Tags" = Table.TransformColumns(#"Added Custom",{{"TagsAsJson", Json.Document}}),
    #"Remove Tags" = Table.RemoveColumns(#"Parsed Tags","Tags"),
    #"Changed Type1" = Table.TransformColumnTypes(#"Remove Tags",{{"BillingAccountId", Int64.Type}, {"BillingAccountName", type text}, {"BillingPeriodStartDate", type date}, {"BillingPeriodEndDate", type date}, {"BillingProfileId", Int64.Type}, {"BillingProfileName", type text}, {"AccountOwnerId", type text}, {"AccountName", type text}, {"SubscriptionId", type text}, {"SubscriptionName", type text}, {"Date", type date}, {"Product", type any}, {"PartNumber", type text}, {"MeterId", type text}, {"ServiceFamily", type any}, {"MeterCategory", type text}, {"MeterSubCategory", type text}, {"MeterRegion", type text}, {"MeterName", type text}, {"Quantity", type number}, {"EffectivePrice", type number}, {"Cost", type number}, {"UnitPrice", type number}, {"BillingCurrency", type any}, {"ResourceLocation", type text}, {"AvailabilityZone", type any}, {"ConsumedService", type text}, {"ResourceId", type text}, {"ResourceName", type text}, {"ServiceInfo1", type any}, {"ServiceInfo2", type text}, {"AdditionalInfo", type text}, {"InvoiceSectionId", type any}, {"InvoiceSection", type any}, {"CostCenter", type any}, {"UnitOfMeasure", type text}, {"ResourceGroup", type text}, {"ReservationId", type any}, {"ReservationName", type any}, {"ProductOrderId", type any}, {"ProductOrderName", type any}, {"OfferId", type text}, {"IsAzureCreditEligible", type logical}, {"Term", type any}, {"PublisherName", type any}, {"PlanName", type any}, {"ChargeType", type text}, {"Frequency", type text}, {"PublisherType", type text}, {"UsageType", type text}, {"ImageType", type text}, {"SKU", type text}, {"VMName", type text}, {"VMProperties", type any}, {"VCPUs", Int64.Type}, {"CPUs", type any}, {"Azure Hybrid Benefit", type text}, {"AHB vCPUs", Int64.Type}, {"Instance Name", type text}, {"IsRIUsage", type text}, {"TagsAsJson", type any}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Cost"}),
    #"Added Custom1" = Table.AddColumn(#"Removed Columns", "Cost", each [Quantity] * [EffectivePrice]),
    #"Changed Type6" = Table.TransformColumnTypes(#"Added Custom1",{{"Cost", type number}})
in
    #"Changed Type6"